#!/bin/bash
export PATH="/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/var/cfengine/bin"
export GIT_CACHE="/var/cache/git"
export MASTERFILES="/var/lib/cfengine3/masterfiles"
export GIT_SOURCE="https://github.com/jameswhite/masterfiles.git"
export GIT_REPOS="masterfiles"

SELF="$(basename $0)"
DIR="$(dirname $0)"
FQDIR="$(cd ${DIR}; pwd)"
FQPATH="${FQDIR}/${SELF}"
OLD_MD5="$(md5sum ${FQPATH} | awk '{print $1}')"

if [ ! -d ${MASTERFILES} ]; then mkdir -p ${MASTERFILES}; fi
if [ ! -d ${GIT_CACHE} ]; then mkdir -p ${GIT_CACHE};fi

cd ${GIT_CACHE}

for repo in `echo "${GIT_REPOS}"`; do

    # clone||update the repository
    repo_dir=$(basename  ${repo}|sed -e 's/\.git$//g')
    if [ ! -d ${GIT_CACHE}/${repo_dir}/.git ]; then
        if [ -d ${GIT_CACHE}/${repo_dir} ]; then rm -fr ${GIT_CACHE}/${repo_dir}; fi
        git clone ${GIT_SOURCE} ${repo} > /dev/null 2>&1
        [ -d ${GIT_CACHE}/${repo_dir} ] && exit 1
    else
        ( cd ${GIT_CACHE}/${repo_dir}; git pull )
    fi

    # make sure we have the correct copy of this script
    NEW_MD5=$(md5sum ${GIT_CACHE}/${repo_dir}/config/update/${FQPATH} | awk '{print $1}')
    if [ "${OLD_MD5}" != "${NEW_MD5}" ]; then
        install -m 0744 ${GIT_CACHE}/${repo_dir}/config/update/${FQPATH} ${FQPATH}
        exec ${FQPATH}
    fi

    # checkout all the remote branches locally, rsync them to masterfiles/<branch_name>
    if [ -d ${GIT_CACHE}/${repo_dir}/ ];then
      (cd ${GIT_CACHE}/${repo_dir}; git fetch > /dev/null 2>&1)
      (
        cd ${GIT_CACHE}/${repo_dir}
        for rbranch in $(git branch -r | grep -v -- '->' | awk -F'/' '{print $NF}'); do
            if [ -z "$(git branch| grep ${rbranch})" ]; then
                git checkout -b ${rbranch} origin/${rbranch}
            else
                git checkout ${rbranch}
            fi
            for dir in $(echo "config inputs modules"); do
                [ ! -d "${MASTERFILES}/${rbranch}/${dir}" ] && mkdir -p "${MASTERFILES}/${rbranch}/${dir}/"
                [ -d "${GIT_CACHE}/${repo_dir}/${dir}/" ] && rsync -aqzPC --exclude ".git" --exclude "cf_promises_validated" --delete ${GIT_CACHE}/${repo_dir}/${dir}/ ${MASTERFILES}/${rbranch}/${dir}/
                (cd ${GIT_CACHE}/${repo_dir}; git log| head -1| awk '{print $NF}') > ${MASTERFILES}/${rbranch}/.git_commit_hash
            done
        done
        [ "$(cd ${GIT_CACHE}/${repo_dir}; git branch | grep '*' | awk '{print $NF}')" != "master" ] && git checkout master
      )

      # delete all local branches and masterfile directories that are no longer in the remote repository
      (
        cd ${GIT_CACHE}/${repo_dir}
        for ldir in $(ls ${MASTERFILES}); do
            if [ -z "$(git branch -r | grep -v -- '->' | awk -F'/' '{print $NF}'|grep ${ldir})" ]; then
                rm -fr ${MASTERFILES}/${ldir}
            fi
        done
        for lbranch in $(git branch | grep -v -- '->' | grep -v "master" | awk '{print $NF}' ); do
            git branch -D ${lbranch}
        done
      )
    fi
done
